<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">

<dictionary title="UTM Terminology">

    <suite name="Standard Suite" code="????" description="Common classes and commands for all applications.">

        <command name="open" code="aevtodoc" description="Open a document.">
            <direct-parameter description="The file(s) to be opened.">
                <type type="file"/>
                <type type="file" list="yes"/>
            </direct-parameter>
            <result description="The opened document(s).">
                <type type="document"/>
                <type type="document" list="yes"/>
            </result>
        </command>

        <enumeration name="printing error handling" code="enum">
            <enumerator name="standard" code="lwst" description="Standard PostScript error handling">
                <cocoa boolean-value="NO"/>
            </enumerator>
            <enumerator name="detailed" code="lwdt" description="print a detailed report of PostScript errors">
                <cocoa boolean-value="YES"/>
            </enumerator>
        </enumeration>

        <command name="quit" code="aevtquit" description="Quit the application.">
            <cocoa class="NSQuitCommand"/>
        </command>

        <command name="count" code="corecnte" description="Return the number of elements of a particular class within an object.">
            <cocoa class="NSCountCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" requires-access="r" description="The objects to be counted."/>
            <parameter name="each" code="kocl" type="type" optional="yes" description="The class of objects to be counted." hidden="yes">
                <cocoa key="ObjectClass"/>
            </parameter>
            <result type="integer" description="The count."/>
        </command>

        <command name="exists" code="coredoex" description="Verify that an object exists.">
            <cocoa class="NSExistsCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="any" requires-access="r" description="The object(s) to check."/>
            <result type="boolean" description="Did the object(s) exist?"/>
        </command>

        <class name="application" code="capp" description="The application's top-level scripting object.">
            <cocoa class="NSApplication"/>
            <property name="name" code="pnam" type="text" access="r" description="The name of the application."/>
            <property name="frontmost" code="pisf" type="boolean" access="r" description="Is this the active application?">
                <cocoa key="isActive"/>
            </property>
            <property name="version" code="vers" type="text" access="r" description="The version number of the application."/>
            <element type="document">
                <cocoa key="orderedDocuments"/>
            </element>
            <element type="window" access="r">
                <cocoa key="orderedWindows"/>
            </element>
            <responds-to command="open">
                <cocoa method="handleOpenScriptCommand:"/>
            </responds-to>
            <responds-to command="quit">
                <cocoa method="handleQuitScriptCommand:"/>
            </responds-to>
        </class>

        <class name="window" code="cwin" description="A window.">
            <cocoa class="NSWindow"/>
            <property name="name" code="pnam" type="text" access="r" description="The title of the window.">
                <cocoa key="title"/>
            </property>
            <property name="id" code="ID  " type="integer" access="r" description="The unique identifier of the window.">
                <cocoa key="uniqueID"/>
            </property>
            <property name="index" code="pidx" type="integer" description="The index of the window, ordered front to back.">
                <cocoa key="orderedIndex"/>
            </property>
            <property name="bounds" code="pbnd" type="rectangle" description="The bounding rectangle of the window.">
                <cocoa key="boundsAsQDRect"/>
            </property>
            <property name="closeable" code="hclb" type="boolean" access="r" description="Does the window have a close button?">
                <cocoa key="hasCloseBox"/>
            </property>
            <property name="miniaturizable" code="ismn" type="boolean" access="r" description="Does the window have a minimize button?">
                <cocoa key="isMiniaturizable"/>
            </property>
            <property name="miniaturized" code="pmnd" type="boolean" description="Is the window minimized right now?">
                <cocoa key="isMiniaturized"/>
            </property>
            <property name="resizable" code="prsz" type="boolean" access="r" description="Can the window be resized?">
                <cocoa key="isResizable"/>
            </property>
            <property name="visible" code="pvis" type="boolean" description="Is the window visible right now?">
                <cocoa key="isVisible"/>
            </property>
            <property name="zoomable" code="iszm" type="boolean" access="r" description="Does the window have a zoom button?">
                <cocoa key="isZoomable"/>
            </property>
            <property name="zoomed" code="pzum" type="boolean" description="Is the window zoomed right now?">
                <cocoa key="isZoomed"/>
            </property>
            <responds-to command="close">
                <cocoa method="handleCloseScriptCommand:"/>
            </responds-to>
        </class>

    </suite>
    
    <suite name="UTM Suite" code="UTMs" description="UTM virtual machines scripting suite.">
        <access-group identifier="com.utmapp.UTM.vm-access" />
        
        <class-extension extends="application" description="An application's top level scripting object.">
          <element type="virtual machine" access="r">
            <cocoa key="scriptingVirtualMachines"/>
          </element>
        </class-extension>
        
        <enumeration name="backend" code="VmEb" description="Backend type.">
            <enumerator name="apple" code="ApPl" description="Apple Virtualization.framework backend."/>
            <enumerator name="qemu" code="QeMu" description="QEMU backend."/>
            <enumerator name="unavailable" code="UnAv" description="The virtual machine is not currently available."/>
        </enumeration>
        
        <enumeration name="status" code="VmEs" description="Status type.">
            <enumerator name="stopped" code="StSa" description="VM is not running.">
                <cocoa integer-value="0" />
            </enumerator>
            <enumerator name="starting" code="StSb" description="VM is starting up.">
                <cocoa integer-value="1" />
            </enumerator>
            <enumerator name="started" code="StSc" description="VM is running.">
                <cocoa integer-value="2" />
            </enumerator>
            <enumerator name="pausing" code="StSd" description="VM is going to pause.">
                <cocoa integer-value="3" />
            </enumerator>
            <enumerator name="paused" code="StSe" description="VM is paused.">
                <cocoa integer-value="4" />
            </enumerator>
            <enumerator name="resuming" code="StSf" description="VM is resuming from pause.">
                <cocoa integer-value="5" />
            </enumerator>
            <enumerator name="stopping" code="StSg" description="VM is stopping.">
                <cocoa integer-value="6" />
            </enumerator>
        </enumeration>
        
        <enumeration name="stop method" code="VmEs" description="Stop by method.">
            <enumerator name="force" code="FoRc" description="Force stop VM by sending stop request to the backend."/>
            <enumerator name="kill" code="KiLl" description="Force kill VM by terminating the backend."/>
            <enumerator name="request" code="ReQu" description="Send a power down request to the guest OS which may be ignored."/>
        </enumeration>
        
        <enumeration name="serial interface" code="VmEr" description="Serial port interface.">
            <enumerator name="ptty" code="PtTy" description="Pseudo TTY port."/>
            <enumerator name="tcp" code="TcP " description="TCP port."/>
            <enumerator name="unavailable" code="IUnA" description="Serial interface is currently unavailable or is in use by the GUI."/>
        </enumeration>
        
        <command name="start" code="UTMvstar">
          <direct-parameter description="Virtual machine to start." type="virtual machine"/>
        </command>
        
        <command name="suspend" code="UTMvsusp">
          <direct-parameter description="Virtual machine to suspend." type="virtual machine"/>
          <parameter name="saving" code="SaVe" description="Save VM state after suspend." type="boolean">
            <cocoa key="saveFlag"/>
          </parameter>
        </command>
        
        <command name="stop" code="UTMvstop">
          <direct-parameter description="Virtual machine to stop." type="virtual machine"/>
          <parameter name="by" code="StBy" description="Method to stop the VM." type="stop method" optional="yes">
            <cocoa key="stopBy"/>
          </parameter>
        </command>
        
        <class name="virtual machine" code="UTMv" description="A virtual machine registered in UTM." plural="virtual machines">
          <cocoa class="UTMScriptingVirtualMachineImpl"/>

          <property name="id" code="ID  " type="text" access="r"
            description="The unique identifier of the VM."/>

          <property name="name" code="pnam" type="text" access="r"
            description="The name of the VM."/>
            
          <property name="notes" code="VmNo" type="text" access="r"
            description="User specified notes."/>
            
          <property name="machine" code="VmTa" type="text" access="r"
            description="Target machine name."/>
            
          <property name="architecture" code="VmAr" type="text" access="r"
            description="Target architecture name."/>
            
          <property name="memory" code="VmMe" type="text" access="r"
            description="RAM size."/>
            
          <property name="backend" code="VmBa" type="backend" access="r"
            description="Emulation/virtualization engine used."/>
            
          <property name="status" code="VmSt" type="status" access="r"
            description="Current running status."/>

          <element type="serial port" access="r"
            description="Serial ports exposed by the guest to the host to access.">
            <cocoa key="serialPorts"/>
          </element>
          
          <responds-to command="start">
            <cocoa method="start:"/>
          </responds-to>
          
          <responds-to command="suspend">
            <cocoa method="suspend:"/>
          </responds-to>
          
          <responds-to command="stop">
            <cocoa method="stop:"/>
          </responds-to>
          
        </class>
        
        <class name="serial port" code="SeRi" description="A serial port in the guest that can be connected to from the host." plural="serial ports">
          <cocoa class="UTMScriptingSerialPortImpl"/>
          <property name="id" code="ID  " type="integer" access="r"
            description="The unique identifier of the tag."/>
          
          <property name="interface" code="SeRf" type="serial interface" access="r"
            description="The type of serial interface on the host."/>
            
          <property name="address" code="SeRa" type="text" access="r"
            description="Host address of the serial port (determined by the interface type)."/>
            
          <property name="port" code="SeRp" type="integer" access="r"
            description="Port number of the serial port (not used in some interface types)."/>
        </class>
    </suite>

</dictionary>
